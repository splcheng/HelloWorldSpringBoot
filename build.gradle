buildscript {
    ext {
        groovyVersion = '2.3.7'
        springBootVersion = '1.2.0.M2'
		springBootStarterVersion = '1.1.9.RELEASE'
        spockVersion = '0.7-groovy-2.0'
        guavaVersion = '18.0'
        swaggerSpringMVCVersion = '0.9.0-SNAPSHOT'
        swaggerSpringMVCUIVersion = '0.2'
    }
    repositories {
        mavenCentral()
        maven { url 'http://repo.spring.io/snapshot' }
        maven { url 'http://repo.spring.io/milestone' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        maven { url 'https://oss.sonatype.org/content/repositories/github-releases' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

version = '0.0.1-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'spring-boot'
apply plugin: 'maven'

version = '0.0.1'
group = 'com.joapp.hello'

jar {
    baseName = 'HelloWorld'
}

mainClassName = 'com.joapp.Application'

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group == 'org.apache.tomcat.embed') {
            details.useVersion '8.0.3'
        }
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            if(version.endsWith('-SNAPSHOT')) {
                snapshotRepository(url: "http://localhost") {
                    authentication(userName: "admin", password: "admin123")
                }
            } else {
                repository(url: "http://localhost") {
                    authentication(userName: "admin", password: "admin123")
                }
            }

            pom.project {
                parent {
                    groupId 'org.springframework.boot'
                    artifactId 'spring-boot-starter-parent'
                    version "${springBootStarterVersion}"
                }
            }
        }
    }
}

install {
    repositories.mavenInstaller {
        pom.project {
            parent {
                groupId 'org.springframework.boot'
                artifactId 'spring-boot-starter-parent'
                version "${springBootStarterVersion}"
            }
        }
    }
}

repositories {
    mavenCentral()
    maven { url 'http://repo.spring.io/snapshot' }
    maven { url 'http://repo.spring.io/milestone' }
    maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local/' }
    maven { url 'http://oss.jfrog.org/artifactory/oss-release-local/' }
}

dependencies {
    compile("org.codehaus.groovy:groovy-all:${groovyVersion}")
    compile("com.google.guava:guava:${guavaVersion}")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("com.mangofactory:swagger-springmvc:${swaggerSpringMVCVersion}")
    compile("org.ajar:swagger-spring-mvc-ui:${swaggerSpringMVCUIVersion}")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.cloud:spring-cloud-starter-eureka:1.0.0.BUILD-SNAPSHOT")
    compile("com.netflix.eureka:eureka-client:1.0.0.BUILD-SNAPSHOT")
    compile("org.springframework.cloud:spring-cloud-commons:1.0.0.BUILD-SNAPSHOT")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.spockframework:spock-core:${spockVersion}")
}


task outBuildFile {
    doLast {
        ext.versionfile = new File('/cast/deployment/buildHelloWorld.txt')
        ext.versionfile.text = "${jar.baseName}-${version}.jar"
    }
}
